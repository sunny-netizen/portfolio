[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quartoweb",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\nlon"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Lon/SiteBond.html",
    "href": "Lon/SiteBond.html",
    "title": "quartoweb",
    "section": "",
    "text": "Load libraries\n\nimport os\nimport time\nimport numpy as np\nimport pandas as pd\nimport networkx as nx\nimport osmnx as ox\nimport matplotlib.pyplot as plt\n\nExtract simplified road network of the City of London and plot.\n\nquery = 'City of London, United Kingdom'\n\n\ng = ox.graph_from_place(query, network_type='all_private', simplify=True, retain_all=False, truncate_by_edge=False, \n                 which_result=None, buffer_dist=None, clean_periphery=True, custom_filter=None)\n\n\nox.plot.plot_graph(g, ax=None, figsize=(8, 8), bgcolor='#111111', node_color='w', node_size=3, \n                      node_alpha=None, node_edgecolor='none', node_zorder=1, edge_color='#999999', \n                      edge_linewidth=1, edge_alpha=None, show=True, close=False, save=False, \n                      filepath=None, dpi=300, bbox=None);\n\n\n\n\n\n# reset multi index\nnodes, edges = ox.graph_to_gdfs(g)\nnodes.reset_index(inplace = True)\nedges.reset_index(inplace = True)\n\n\n\narray([  1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,\n        14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,\n        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,\n        40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,\n        53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,\n        66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,\n        79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,\n        92,  93,  94,  95,  96,  97,  98,  99, 100])\n\n\nPlot evolution of largest cluster size to view the percolation behaviour of the City of London.\n\n# Plot percolation\nfig, ax = plt.subplots()\n\n#Reading data\nclusters_info_filename = output_path + \"/clusters_info_p.txt\"\ninfo = pd.read_csv(clusters_info_filename)\n\nx = info['threshold_p']\ny = info['LCC_size']/3994 # g.number_of_nodes() #info['LCC_size'].max()\n\n#Plotting\nimport matplotlib.ticker as ticker\nplt.rcParams['xtick.major.width'] = 1.2\nplt.rcParams['ytick.major.width'] = 1.2\nplt.rcParams['axes.linewidth'] = 1.2\n\nrangec = np.linspace(0.2,0.95,5)\ncolors = [plt.cm.YlGnBu(i) for i in rangec]\n\nax.plot(x, y,'o-', markersize=7, color=colors[1], clip_on=True, mfc=colors[1],\n    mec=colors[1], lw=2, label='Size LCC')\n\nplt.xlim([0, 100])\nplt.ylim([0, 1])\n\nax.set_xlabel(r'Percolation threshold, $p$ (meters)', size=16)\nax.set_ylabel('Size LCC', size=16)\nax.tick_params(axis='both', which='both', labelsize=16)\n\nxcoords = [1, 4, 10, 17, 19, 22, 27, 32, 41, 44, 45, 47, 48, 50, 53, 57, 63, 68, 74, 80]\nfor xc in xcoords:\n    plt.axvline(x=xc)\n    \n#plt.savefig(\"SiteBond/figs/lcc\")\n\n\n\n\nPlot percolation processes at selected thresholds.\n\ndir_res_memb = output_path+'/membTables/' \n#print(dir_res_memb)\n#for p in list(reversed(ps)):\n\nfor p in xcoords:\n    file_name = dir_res_memb+'membership_'+'p'+str(p)+'.txt'\n    #print(file_name)\n    memb_table_file = pd.read_csv(file_name)\n    #memb_table_file.head()\n    nodes = pd.merge(nodes, memb_table_file, how='left', left_on='osmid', right_on='node_id', suffixes=(None, '_'+str(p)))\n    edges[\"up\"] = [p if u in list(memb_table_file.node_id) else 'NA' for u in edges[\"u\"]]\n    edges[\"vp\"] = [p if v in list(memb_table_file.node_id) else 'NA' for v in edges[\"v\"]]\n    nodes[\"p\"] = [p if osmid in list(memb_table_file.node_id) else 'NA' for osmid in nodes[\"osmid\"]]\n\n    fig, ax = plt.subplots()\n    nodes[nodes[\"p\"]==p].plot(ax=ax, markersize=1, color='red');\n    edges[edges[\"up\"]==p][edges[\"vp\"]==p].plot(ax=ax, linewidth=1);\n    #plt.savefig(\"SiteBond/figs/lon_\"+str(p), dpi=300)\n    plt.show();\n    \n# bond percolation... but size is with intersections instead of edges\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)\n\n\n\n\n\n/Users/yun/Documents/portfolio/.venv/lib/python3.10/site-packages/geopandas/geodataframe.py:1428: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  result = super().__getitem__(key)"
  }
]